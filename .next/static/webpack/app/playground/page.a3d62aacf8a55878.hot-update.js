"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/playground/page",{

/***/ "(app-pages-browser)/./src/app/playground/page.tsx":
/*!*************************************!*\
  !*** ./src/app/playground/page.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PlaygroundPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/react */ \"(app-pages-browser)/./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_TypingBox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/TypingBox */ \"(app-pages-browser)/./src/components/TypingBox.tsx\");\n/* harmony import */ var _modules_typingTest_utils_sentenceBank__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/modules/typingTest/utils/sentenceBank */ \"(app-pages-browser)/./src/modules/typingTest/utils/sentenceBank.ts\");\n/* harmony import */ var _modules_typingTest_server_saveResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/modules/typingTest/server/saveResult */ \"(app-pages-browser)/./src/modules/typingTest/server/saveResult.ts\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n // to the results page  \nfunction PlaygroundPage() {\n    var _session_user;\n    _s();\n    const { data: session } = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_1__.useSession)();\n    const userId = session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.email; // Or .id if you have a user ID\n    const sentence = (0,_modules_typingTest_utils_sentenceBank__WEBPACK_IMPORTED_MODULE_3__.getRandomSentence)();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_5__.useRouter)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: \"min-h-screen flex flex-col items-center justify-center p-8\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                className: \"text-2xl font-bold mb-6\",\n                children: \"Typing Playground\"\n            }, void 0, false, {\n                fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/app/playground/page.tsx\",\n                lineNumber: 20,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_TypingBox__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                targetText: sentence,\n                onComplete: async (stats)=>{\n                    await (0,_modules_typingTest_server_saveResult__WEBPACK_IMPORTED_MODULE_4__.saveTypingResult)({\n                        ...stats,\n                        user_id: userId,\n                        sentence\n                    });\n                    // Optionally show a summary or`\n                    router.push(\"/results\");\n                }\n            }, void 0, false, {\n                fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/app/playground/page.tsx\",\n                lineNumber: 21,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/app/playground/page.tsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, this);\n} // 4. Current User Flow\n // User lands on /playground.\n // Sees a random sentence and types it in the TypingBox.\n // When finished, the onComplete callback is\n //  triggered (currently throws an error).\n // User can click “Try Again” to reset and type the same sentence again.\n // 5. What’s Missing / Next Steps\n // The onComplete function should be implemented to \n // handle the stats (e.g., display a summary, save results,\n //    or move to another sentence).\n // If you want to enhance the playground, you could:\n // Show a summary modal or message on completion.\n // Save results to a database.\n // Allow the user to try a new random sentence.\n // Ready to move to the next file or page?\n // Let me know if you want to:\n // Dive into how useTypingTest works,\n // Implement the onComplete logic,\n // Or move to another part of the user journey!\n_s(PlaygroundPage, \"xwQvZTIDPY4aHyS8h9XgPdunGG8=\", false, function() {\n    return [\n        next_auth_react__WEBPACK_IMPORTED_MODULE_1__.useSession,\n        next_navigation__WEBPACK_IMPORTED_MODULE_5__.useRouter\n    ];\n});\n_c = PlaygroundPage;\nvar _c;\n$RefreshReg$(_c, \"PlaygroundPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvcGxheWdyb3VuZC9wYWdlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBRTZDO0FBQ0U7QUFDNkI7QUFDRjtBQUU5QixDQUFDLHdCQUF3QjtBQUl0RCxTQUFTSztRQUVQQzs7SUFEZixNQUFNLEVBQUVDLE1BQU1ELE9BQU8sRUFBRSxHQUFHTiwyREFBVUE7SUFDcEMsTUFBTVEsU0FBU0Ysb0JBQUFBLCtCQUFBQSxnQkFBQUEsUUFBU0csSUFBSSxjQUFiSCxvQ0FBQUEsY0FBZUksS0FBSyxFQUFFLCtCQUErQjtJQUNwRSxNQUFNQyxXQUFXVCx5RkFBaUJBO0lBQ2xDLE1BQU1VLFNBQVNSLDBEQUFTQTtJQUV4QixxQkFDRSw4REFBQ1M7UUFBS0MsV0FBVTs7MEJBQ2QsOERBQUNDO2dCQUFHRCxXQUFVOzBCQUEwQjs7Ozs7OzBCQUN4Qyw4REFBQ2IsNkRBQVNBO2dCQUNSZSxZQUFZTDtnQkFDWk0sWUFBWSxPQUFPQztvQkFDakIsTUFBTWYsdUZBQWdCQSxDQUFDO3dCQUNyQixHQUFHZSxLQUFLO3dCQUNSQyxTQUFTWDt3QkFDVEc7b0JBQ0Y7b0JBQ0EsZ0NBQWdDO29CQUNoQ0MsT0FBT1EsSUFBSSxDQUFDO2dCQUNkOzs7Ozs7Ozs7Ozs7QUFJUixFQUNBLHVCQUF1QjtDQUN2Qiw2QkFBNkI7Q0FDN0Isd0RBQXdEO0NBQ3hELDRDQUE0QztDQUM1QywwQ0FBMEM7Q0FDMUMsd0VBQXdFO0NBQ3hFLGlDQUFpQztDQUNqQyxvREFBb0Q7Q0FDcEQsMkRBQTJEO0NBQzNELG1DQUFtQztDQUNuQyxvREFBb0Q7Q0FDcEQsaURBQWlEO0NBQ2pELDhCQUE4QjtDQUM5QiwrQ0FBK0M7Q0FDL0MsMENBQTBDO0NBQzFDLDhCQUE4QjtDQUM5QixxQ0FBcUM7Q0FDckMsa0NBQWtDO0NBQ2xDLCtDQUErQztHQTFDdkJmOztRQUNJTCx1REFBVUE7UUFHckJJLHNEQUFTQTs7O0tBSkZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvcGxheWdyb3VuZC9wYWdlLnRzeD8wZTYzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IHsgdXNlU2Vzc2lvbiB9IGZyb20gJ25leHQtYXV0aC9yZWFjdCc7XG5pbXBvcnQgVHlwaW5nQm94IGZyb20gJ0AvY29tcG9uZW50cy9UeXBpbmdCb3gnO1xuaW1wb3J0IHsgZ2V0UmFuZG9tU2VudGVuY2UgfSBmcm9tICdAL21vZHVsZXMvdHlwaW5nVGVzdC91dGlscy9zZW50ZW5jZUJhbmsnO1xuaW1wb3J0IHsgc2F2ZVR5cGluZ1Jlc3VsdCB9IGZyb20gJ0AvbW9kdWxlcy90eXBpbmdUZXN0L3NlcnZlci9zYXZlUmVzdWx0JztcbmltcG9ydCB0eXBlIHsgVHlwaW5nU3RhdHMgfSBmcm9tICdAL21vZHVsZXMvdHlwaW5nVGVzdC9zZXJ2ZXIvc2F2ZVJlc3VsdCc7XG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L25hdmlnYXRpb24nOyAvLyB0byB0aGUgcmVzdWx0cyBwYWdlICBcblxuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBsYXlncm91bmRQYWdlKCkge1xuICBjb25zdCB7IGRhdGE6IHNlc3Npb24gfSA9IHVzZVNlc3Npb24oKTtcbiAgY29uc3QgdXNlcklkID0gc2Vzc2lvbj8udXNlcj8uZW1haWw7IC8vIE9yIC5pZCBpZiB5b3UgaGF2ZSBhIHVzZXIgSURcbiAgY29uc3Qgc2VudGVuY2UgPSBnZXRSYW5kb21TZW50ZW5jZSgpO1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcblxuICByZXR1cm4gKFxuICAgIDxtYWluIGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBmbGV4IGZsZXgtY29sIGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBwLThcIj5cbiAgICAgIDxoMSBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgbWItNlwiPlR5cGluZyBQbGF5Z3JvdW5kPC9oMT5cbiAgICAgIDxUeXBpbmdCb3hcbiAgICAgICAgdGFyZ2V0VGV4dD17c2VudGVuY2V9XG4gICAgICAgIG9uQ29tcGxldGU9e2FzeW5jIChzdGF0czogVHlwaW5nU3RhdHMpID0+IHtcbiAgICAgICAgICBhd2FpdCBzYXZlVHlwaW5nUmVzdWx0KHtcbiAgICAgICAgICAgIC4uLnN0YXRzLFxuICAgICAgICAgICAgdXNlcl9pZDogdXNlcklkLFxuICAgICAgICAgICAgc2VudGVuY2UsXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgLy8gT3B0aW9uYWxseSBzaG93IGEgc3VtbWFyeSBvcmBcbiAgICAgICAgICByb3V0ZXIucHVzaCgnL3Jlc3VsdHMnKTtcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgPC9tYWluPlxuICApO1xufVxuLy8gNC4gQ3VycmVudCBVc2VyIEZsb3dcbi8vIFVzZXIgbGFuZHMgb24gL3BsYXlncm91bmQuXG4vLyBTZWVzIGEgcmFuZG9tIHNlbnRlbmNlIGFuZCB0eXBlcyBpdCBpbiB0aGUgVHlwaW5nQm94LlxuLy8gV2hlbiBmaW5pc2hlZCwgdGhlIG9uQ29tcGxldGUgY2FsbGJhY2sgaXNcbi8vICB0cmlnZ2VyZWQgKGN1cnJlbnRseSB0aHJvd3MgYW4gZXJyb3IpLlxuLy8gVXNlciBjYW4gY2xpY2sg4oCcVHJ5IEFnYWlu4oCdIHRvIHJlc2V0IGFuZCB0eXBlIHRoZSBzYW1lIHNlbnRlbmNlIGFnYWluLlxuLy8gNS4gV2hhdOKAmXMgTWlzc2luZyAvIE5leHQgU3RlcHNcbi8vIFRoZSBvbkNvbXBsZXRlIGZ1bmN0aW9uIHNob3VsZCBiZSBpbXBsZW1lbnRlZCB0byBcbi8vIGhhbmRsZSB0aGUgc3RhdHMgKGUuZy4sIGRpc3BsYXkgYSBzdW1tYXJ5LCBzYXZlIHJlc3VsdHMsXG4vLyAgICBvciBtb3ZlIHRvIGFub3RoZXIgc2VudGVuY2UpLlxuLy8gSWYgeW91IHdhbnQgdG8gZW5oYW5jZSB0aGUgcGxheWdyb3VuZCwgeW91IGNvdWxkOlxuLy8gU2hvdyBhIHN1bW1hcnkgbW9kYWwgb3IgbWVzc2FnZSBvbiBjb21wbGV0aW9uLlxuLy8gU2F2ZSByZXN1bHRzIHRvIGEgZGF0YWJhc2UuXG4vLyBBbGxvdyB0aGUgdXNlciB0byB0cnkgYSBuZXcgcmFuZG9tIHNlbnRlbmNlLlxuLy8gUmVhZHkgdG8gbW92ZSB0byB0aGUgbmV4dCBmaWxlIG9yIHBhZ2U/XG4vLyBMZXQgbWUga25vdyBpZiB5b3Ugd2FudCB0bzpcbi8vIERpdmUgaW50byBob3cgdXNlVHlwaW5nVGVzdCB3b3Jrcyxcbi8vIEltcGxlbWVudCB0aGUgb25Db21wbGV0ZSBsb2dpYyxcbi8vIE9yIG1vdmUgdG8gYW5vdGhlciBwYXJ0IG9mIHRoZSB1c2VyIGpvdXJuZXkhIl0sIm5hbWVzIjpbInVzZVNlc3Npb24iLCJUeXBpbmdCb3giLCJnZXRSYW5kb21TZW50ZW5jZSIsInNhdmVUeXBpbmdSZXN1bHQiLCJ1c2VSb3V0ZXIiLCJQbGF5Z3JvdW5kUGFnZSIsInNlc3Npb24iLCJkYXRhIiwidXNlcklkIiwidXNlciIsImVtYWlsIiwic2VudGVuY2UiLCJyb3V0ZXIiLCJtYWluIiwiY2xhc3NOYW1lIiwiaDEiLCJ0YXJnZXRUZXh0Iiwib25Db21wbGV0ZSIsInN0YXRzIiwidXNlcl9pZCIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/playground/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/TypingBox.tsx":
/*!**************************************!*\
  !*** ./src/components/TypingBox.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TypingBox; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _modules_typingTest_utils_useTypingTest__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/modules/typingTest/utils/useTypingTest */ \"(app-pages-browser)/./src/modules/typingTest/utils/useTypingTest.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction TypingBox(param) {\n    let { targetText, onComplete } = param;\n    _s();\n    const { input, stats, isComplete, handleInput, reset } = (0,_modules_typingTest_utils_useTypingTest__WEBPACK_IMPORTED_MODULE_2__.useTypingTest)(targetText);\n    const [focused, setFocused] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // ✨ NEW: Call onComplete when test is complete\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isComplete && stats) {\n            onComplete(stats);\n        }\n    }, [\n        isComplete,\n        stats,\n        onComplete\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full max-w-2xl mx-auto space-y-6\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-gray-700 text-xl font-medium\",\n                children: targetText\n            }, void 0, false, {\n                fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/components/TypingBox.tsx\",\n                lineNumber: 24,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                value: input,\n                onChange: (e)=>handleInput(e.target.value),\n                onFocus: ()=>setFocused(true),\n                placeholder: \"Start typing here...\",\n                rows: 4,\n                className: \"w-full border rounded-md p-4 font-mono text-lg tracking-wide focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                disabled: isComplete\n            }, void 0, false, {\n                fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/components/TypingBox.tsx\",\n                lineNumber: 28,\n                columnNumber: 7\n            }, this),\n            stats && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"space-y-1 text-gray-600\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                children: \"WPM:\"\n                            }, void 0, false, {\n                                fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/components/TypingBox.tsx\",\n                                lineNumber: 40,\n                                columnNumber: 14\n                            }, this),\n                            \" \",\n                            stats.wpm\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/components/TypingBox.tsx\",\n                        lineNumber: 40,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                children: \"Accuracy:\"\n                            }, void 0, false, {\n                                fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/components/TypingBox.tsx\",\n                                lineNumber: 41,\n                                columnNumber: 14\n                            }, this),\n                            \" \",\n                            stats.accuracy,\n                            \"%\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/components/TypingBox.tsx\",\n                        lineNumber: 41,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                children: \"Mistakes:\"\n                            }, void 0, false, {\n                                fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/components/TypingBox.tsx\",\n                                lineNumber: 42,\n                                columnNumber: 14\n                            }, this),\n                            \" \",\n                            Object.keys(stats.mistakes).length\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/components/TypingBox.tsx\",\n                        lineNumber: 42,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/components/TypingBox.tsx\",\n                lineNumber: 39,\n                columnNumber: 9\n            }, this),\n            isComplete && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: reset,\n                className: \"bg-black text-white px-6 py-2 rounded-md hover:bg-gray-800 transition\",\n                children: \"Try Again\"\n            }, void 0, false, {\n                fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/components/TypingBox.tsx\",\n                lineNumber: 47,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/uzayrsonday/Documents/Projects/basetypecursor/src/components/TypingBox.tsx\",\n        lineNumber: 23,\n        columnNumber: 5\n    }, this);\n} // Section\n // What it does\n // targetText\n // Passed in from parent (e.g. a sentence from sentenceBank)\n // useTypingTest(targetText)\n // Initializes the hook\n // textarea\n // Captures user input\n // handleInput()\n // Updates input + runs engine logic\n // stats\n // Live typing stats â€” shown once available\n // isComplete\n // Locks the textarea + shows retry button\n // reset()\n // Resets everything for a new round\n_s(TypingBox, \"3+9bis6/Wtm5GkwVKBpSCnXrAtQ=\", false, function() {\n    return [\n        _modules_typingTest_utils_useTypingTest__WEBPACK_IMPORTED_MODULE_2__.useTypingTest\n    ];\n});\n_c = TypingBox;\nvar _c;\n$RefreshReg$(_c, \"TypingBox\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1R5cGluZ0JveC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUU0QztBQUM2QjtBQU8xRCxTQUFTRyxVQUFVLEtBQTBDO1FBQTFDLEVBQUVDLFVBQVUsRUFBRUMsVUFBVSxFQUFrQixHQUExQzs7SUFDaEMsTUFBTSxFQUFFQyxLQUFLLEVBQUVDLEtBQUssRUFBRUMsVUFBVSxFQUFFQyxXQUFXLEVBQUVDLEtBQUssRUFBRSxHQUFHUixzRkFBYUEsQ0FBQ0U7SUFDdkUsTUFBTSxDQUFDTyxTQUFTQyxXQUFXLEdBQUdaLCtDQUFRQSxDQUFDO0lBRXZDLCtDQUErQztJQUMvQ0MsZ0RBQVNBLENBQUM7UUFDUixJQUFJTyxjQUFjRCxPQUFPO1lBQ3ZCRixXQUFXRTtRQUNiO0lBQ0YsR0FBRztRQUFDQztRQUFZRDtRQUFPRjtLQUFXO0lBRWxDLHFCQUNFLDhEQUFDUTtRQUFJQyxXQUFVOzswQkFDYiw4REFBQ0Q7Z0JBQUlDLFdBQVU7MEJBQ1pWOzs7Ozs7MEJBR0gsOERBQUNXO2dCQUNDQyxPQUFPVjtnQkFDUFcsVUFBVSxDQUFDQyxJQUFNVCxZQUFZUyxFQUFFQyxNQUFNLENBQUNILEtBQUs7Z0JBQzNDSSxTQUFTLElBQU1SLFdBQVc7Z0JBQzFCUyxhQUFZO2dCQUNaQyxNQUFNO2dCQUNOUixXQUFVO2dCQUNWUyxVQUFVZjs7Ozs7O1lBR1hELHVCQUNDLDhEQUFDTTtnQkFBSUMsV0FBVTs7a0NBQ2IsOERBQUNVOzswQ0FBRSw4REFBQ0M7MENBQU87Ozs7Ozs0QkFBYTs0QkFBRWxCLE1BQU1tQixHQUFHOzs7Ozs7O2tDQUNuQyw4REFBQ0Y7OzBDQUFFLDhEQUFDQzswQ0FBTzs7Ozs7OzRCQUFrQjs0QkFBRWxCLE1BQU1vQixRQUFROzRCQUFDOzs7Ozs7O2tDQUM5Qyw4REFBQ0g7OzBDQUFFLDhEQUFDQzswQ0FBTzs7Ozs7OzRCQUFrQjs0QkFBRUcsT0FBT0MsSUFBSSxDQUFDdEIsTUFBTXVCLFFBQVEsRUFBRUMsTUFBTTs7Ozs7Ozs7Ozs7OztZQUlwRXZCLDRCQUNDLDhEQUFDd0I7Z0JBQ0NDLFNBQVN2QjtnQkFDVEksV0FBVTswQkFDWDs7Ozs7Ozs7Ozs7O0FBTVQsRUFFQSxVQUFVO0NBQ1YsZUFBZTtDQUNmLGFBQWE7Q0FDYiw0REFBNEQ7Q0FDNUQsNEJBQTRCO0NBQzVCLHVCQUF1QjtDQUN2QixXQUFXO0NBQ1gsc0JBQXNCO0NBQ3RCLGdCQUFnQjtDQUNoQixvQ0FBb0M7Q0FDcEMsUUFBUTtDQUNSLDZDQUE2QztDQUM3QyxhQUFhO0NBQ2IsMENBQTBDO0NBQzFDLFVBQVU7Q0FDVixvQ0FBb0M7R0E5RFpYOztRQUNtQ0Qsa0ZBQWFBOzs7S0FEaERDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL1R5cGluZ0JveC50c3g/NzFlZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VUeXBpbmdUZXN0IH0gZnJvbSAnQC9tb2R1bGVzL3R5cGluZ1Rlc3QvdXRpbHMvdXNlVHlwaW5nVGVzdCc7XG5cbnR5cGUgVHlwaW5nQm94UHJvcHMgPSB7XG4gIHRhcmdldFRleHQ6IHN0cmluZztcbiAgb25Db21wbGV0ZTogKHN0YXRzOiBhbnkpID0+IHZvaWQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUeXBpbmdCb3goeyB0YXJnZXRUZXh0LCBvbkNvbXBsZXRlIH06IFR5cGluZ0JveFByb3BzKSB7XG4gIGNvbnN0IHsgaW5wdXQsIHN0YXRzLCBpc0NvbXBsZXRlLCBoYW5kbGVJbnB1dCwgcmVzZXQgfSA9IHVzZVR5cGluZ1Rlc3QodGFyZ2V0VGV4dCk7XG4gIGNvbnN0IFtmb2N1c2VkLCBzZXRGb2N1c2VkXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICAvLyDinKggTkVXOiBDYWxsIG9uQ29tcGxldGUgd2hlbiB0ZXN0IGlzIGNvbXBsZXRlXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzQ29tcGxldGUgJiYgc3RhdHMpIHtcbiAgICAgIG9uQ29tcGxldGUoc3RhdHMpO1xuICAgIH1cbiAgfSwgW2lzQ29tcGxldGUsIHN0YXRzLCBvbkNvbXBsZXRlXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInctZnVsbCBtYXgtdy0yeGwgbXgtYXV0byBzcGFjZS15LTZcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTcwMCB0ZXh0LXhsIGZvbnQtbWVkaXVtXCI+XG4gICAgICAgIHt0YXJnZXRUZXh0fVxuICAgICAgPC9kaXY+XG5cbiAgICAgIDx0ZXh0YXJlYVxuICAgICAgICB2YWx1ZT17aW5wdXR9XG4gICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gaGFuZGxlSW5wdXQoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICBvbkZvY3VzPXsoKSA9PiBzZXRGb2N1c2VkKHRydWUpfVxuICAgICAgICBwbGFjZWhvbGRlcj1cIlN0YXJ0IHR5cGluZyBoZXJlLi4uXCJcbiAgICAgICAgcm93cz17NH1cbiAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIGJvcmRlciByb3VuZGVkLW1kIHAtNCBmb250LW1vbm8gdGV4dC1sZyB0cmFja2luZy13aWRlIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1ibHVlLTUwMFwiXG4gICAgICAgIGRpc2FibGVkPXtpc0NvbXBsZXRlfVxuICAgICAgLz5cblxuICAgICAge3N0YXRzICYmIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTEgdGV4dC1ncmF5LTYwMFwiPlxuICAgICAgICAgIDxwPjxzdHJvbmc+V1BNOjwvc3Ryb25nPiB7c3RhdHMud3BtfTwvcD5cbiAgICAgICAgICA8cD48c3Ryb25nPkFjY3VyYWN5Ojwvc3Ryb25nPiB7c3RhdHMuYWNjdXJhY3l9JTwvcD5cbiAgICAgICAgICA8cD48c3Ryb25nPk1pc3Rha2VzOjwvc3Ryb25nPiB7T2JqZWN0LmtleXMoc3RhdHMubWlzdGFrZXMpLmxlbmd0aH08L3A+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cblxuICAgICAge2lzQ29tcGxldGUgJiYgKFxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgb25DbGljaz17cmVzZXR9XG4gICAgICAgICAgY2xhc3NOYW1lPVwiYmctYmxhY2sgdGV4dC13aGl0ZSBweC02IHB5LTIgcm91bmRlZC1tZCBob3ZlcjpiZy1ncmF5LTgwMCB0cmFuc2l0aW9uXCJcbiAgICAgICAgPlxuICAgICAgICAgIFRyeSBBZ2FpblxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbi8vIFNlY3Rpb25cbi8vIFdoYXQgaXQgZG9lc1xuLy8gdGFyZ2V0VGV4dFxuLy8gUGFzc2VkIGluIGZyb20gcGFyZW50IChlLmcuIGEgc2VudGVuY2UgZnJvbSBzZW50ZW5jZUJhbmspXG4vLyB1c2VUeXBpbmdUZXN0KHRhcmdldFRleHQpXG4vLyBJbml0aWFsaXplcyB0aGUgaG9va1xuLy8gdGV4dGFyZWFcbi8vIENhcHR1cmVzIHVzZXIgaW5wdXRcbi8vIGhhbmRsZUlucHV0KClcbi8vIFVwZGF0ZXMgaW5wdXQgKyBydW5zIGVuZ2luZSBsb2dpY1xuLy8gc3RhdHNcbi8vIExpdmUgdHlwaW5nIHN0YXRzIMOi4oKs4oCdIHNob3duIG9uY2UgYXZhaWxhYmxlXG4vLyBpc0NvbXBsZXRlXG4vLyBMb2NrcyB0aGUgdGV4dGFyZWEgKyBzaG93cyByZXRyeSBidXR0b25cbi8vIHJlc2V0KClcbi8vIFJlc2V0cyBldmVyeXRoaW5nIGZvciBhIG5ldyByb3VuZFxuIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlVHlwaW5nVGVzdCIsIlR5cGluZ0JveCIsInRhcmdldFRleHQiLCJvbkNvbXBsZXRlIiwiaW5wdXQiLCJzdGF0cyIsImlzQ29tcGxldGUiLCJoYW5kbGVJbnB1dCIsInJlc2V0IiwiZm9jdXNlZCIsInNldEZvY3VzZWQiLCJkaXYiLCJjbGFzc05hbWUiLCJ0ZXh0YXJlYSIsInZhbHVlIiwib25DaGFuZ2UiLCJlIiwidGFyZ2V0Iiwib25Gb2N1cyIsInBsYWNlaG9sZGVyIiwicm93cyIsImRpc2FibGVkIiwicCIsInN0cm9uZyIsIndwbSIsImFjY3VyYWN5IiwiT2JqZWN0Iiwia2V5cyIsIm1pc3Rha2VzIiwibGVuZ3RoIiwiYnV0dG9uIiwib25DbGljayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/TypingBox.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/modules/typingTest/server/saveResult.ts":
/*!*****************************************************!*\
  !*** ./src/modules/typingTest/server/saveResult.ts ***!
  \*****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   saveTypingResult: function() { return /* binding */ saveTypingResult; }\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n\nasync function saveTypingResult(result) {\n    const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"typing_results\").insert([\n        result\n    ]);\n    if (error) {\n        console.error(\"Error saving typing result:\", error.message);\n    } else {\n        console.log(\"✅ Typing result saved to Supabase\");\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9tb2R1bGVzL3R5cGluZ1Rlc3Qvc2VydmVyL3NhdmVSZXN1bHQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFXbkMsZUFBZUMsaUJBQWlCQyxNQUFtRTtJQUN4RyxNQUFNLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILG1EQUFRQSxDQUFDSSxJQUFJLENBQUMsa0JBQWtCQyxNQUFNLENBQUM7UUFBQ0g7S0FBTztJQUN2RSxJQUFJQyxPQUFPO1FBQ1RHLFFBQVFILEtBQUssQ0FBQywrQkFBK0JBLE1BQU1JLE9BQU87SUFDNUQsT0FBTztRQUNMRCxRQUFRRSxHQUFHLENBQUM7SUFDZDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9tb2R1bGVzL3R5cGluZ1Rlc3Qvc2VydmVyL3NhdmVSZXN1bHQudHM/N2VlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdXBhYmFzZSB9IGZyb20gJ0AvbGliL3N1cGFiYXNlJztcblxuZXhwb3J0IGludGVyZmFjZSBUeXBpbmdTdGF0cyB7XG4gIHdwbTogbnVtYmVyO1xuICBhY2N1cmFjeTogbnVtYmVyO1xuICBtaXN0YWtlczogeyBba2V5OiBzdHJpbmddOiBudW1iZXIgfTtcbiAgdG90YWxUaW1lOiBudW1iZXI7XG4gIHRvdGFsQ2hhcmFjdGVyczogbnVtYmVyO1xuICBjb3JyZWN0Q2hhcmFjdGVyczogbnVtYmVyO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2F2ZVR5cGluZ1Jlc3VsdChyZXN1bHQ6IFR5cGluZ1N0YXRzICYgeyB1c2VyX2lkPzogc3RyaW5nIHwgbnVsbDsgc2VudGVuY2U6IHN0cmluZyB9KSB7XG4gIGNvbnN0IHsgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmZyb20oJ3R5cGluZ19yZXN1bHRzJykuaW5zZXJ0KFtyZXN1bHRdKTtcbiAgaWYgKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3Igc2F2aW5nIHR5cGluZyByZXN1bHQ6JywgZXJyb3IubWVzc2FnZSk7XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coJ+KchSBUeXBpbmcgcmVzdWx0IHNhdmVkIHRvIFN1cGFiYXNlJyk7XG4gIH1cbn0iXSwibmFtZXMiOlsic3VwYWJhc2UiLCJzYXZlVHlwaW5nUmVzdWx0IiwicmVzdWx0IiwiZXJyb3IiLCJmcm9tIiwiaW5zZXJ0IiwiY29uc29sZSIsIm1lc3NhZ2UiLCJsb2ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/modules/typingTest/server/saveResult.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/modules/typingTest/utils/engine.ts":
/*!************************************************!*\
  !*** ./src/modules/typingTest/utils/engine.ts ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypingTestEngine: function() { return /* binding */ TypingTestEngine; }\n/* harmony export */ });\nclass TypingTestEngine {\n    start() {\n        this.startTime = Date.now();\n        this.isComplete = false;\n        this.mistakes = {};\n        this.totalCharacters = 0;\n        this.correctCharacters = 0;\n    }\n    processInput(input) {\n        if (!this.startTime) {\n            this.start();\n        }\n        this.totalCharacters = input.length;\n        this.correctCharacters = 0;\n        for(let i = 0; i < input.length; i++){\n            if (input[i] === this.targetText[i]) {\n                this.correctCharacters++;\n            } else {\n                const key = this.targetText[i];\n                this.mistakes[key] = (this.mistakes[key] || 0) + 1;\n            }\n        }\n        this.isComplete = input.length === this.targetText.length;\n        return this.isComplete;\n    }\n    getStats() {\n        if (!this.startTime) {\n            throw new Error(\"Test has not been started\");\n        }\n        const totalTime = (Date.now() - this.startTime) / 1000; // in seconds\n        const words = this.targetText.length / 5; // standard word length\n        const wpm = words / totalTime * 60;\n        const accuracy = this.correctCharacters / this.totalCharacters * 100;\n        return {\n            wpm: Math.round(wpm * 100) / 100,\n            accuracy: Math.round(accuracy * 100) / 100,\n            mistakes: this.mistakes,\n            totalTime,\n            totalCharacters: this.totalCharacters,\n            correctCharacters: this.correctCharacters\n        };\n    }\n    isTestComplete() {\n        return this.isComplete;\n    }\n    constructor(targetText){\n        this.targetText = targetText;\n        this.startTime = null;\n        this.mistakes = {};\n        this.totalCharacters = 0;\n        this.correctCharacters = 0;\n        this.isComplete = false;\n    }\n} // Absolutely — let’s walk through your TypingTestEngine line by line and make sure it supports everything you’ll need in the playground and beyond.\n // ⸻\n // 🔍 OVERVIEW: What the engine does\n // You’ve created a class-based engine that:\n // \t•\tAccepts a targetText to type\n // \t•\tStarts a typing session when input begins\n // \t•\tCompares user input to target text\n // \t•\tTracks:\n // \t•\t✅ total and correct characters\n // \t•\t✅ character-level mistakes\n // \t•\t✅ typing completion\n // \t•\tCalculates:\n // \t•\t✅ WPM (words per minute)\n // \t•\t✅ Accuracy\n // \t•\t✅ Total time\n // This is great foundational logic — now let’s break it down in chunks:\n // ⸻\n // 🔧 CLASS: TypingTestEngine\n // export class TypingTestEngine {\n //   private startTime: number | null = null;\n //   private mistakes: { [key: string]: number } = {};\n //   private totalCharacters = 0;\n //   private correctCharacters = 0;\n //   private isComplete = false;\n //   constructor(private readonly targetText: string) {}\n // ✅ What it does:\n // \t•\tstartTime: Tracks when the test begins\n // \t•\tmistakes: Key-by-key mistake counter (e.g. { \"q\": 2 })\n // \t•\ttotalCharacters / correctCharacters: Input metrics\n // \t•\tisComplete: Boolean to check if user has finished typing\n // \t•\ttargetText: The text the user needs to type (injected at instantiation)\n // ✅ Yes — this setup is solid. All state is encapsulated inside the class.\n // ⸻\n // 🟢 start()\n // start(): void {\n //   this.startTime = Date.now();\n //   this.isComplete = false;\n //   this.mistakes = {};\n //   this.totalCharacters = 0;\n //   this.correctCharacters = 0;\n // }\n // Called manually or automatically on first input\n // ✅ Resets all tracking variables — this is good. You might want to expose this publicly in your hook so it can be triggered when switching paragraphs later.\n // ⸻\n // 🟡 processInput(input: string)\n // processInput(input: string): boolean {\n //   if (!this.startTime) {\n //     this.start();  // lazy-init\n //   }\n //   this.totalCharacters = input.length;\n //   this.correctCharacters = 0;\n //   for (let i = 0; i < input.length; i++) {\n //     if (input[i] === this.targetText[i]) {\n //       this.correctCharacters++;\n //     } else {\n //       const key = this.targetText[i];\n //       this.mistakes[key] = (this.mistakes[key] || 0) + 1;\n //     }\n //   }\n //   this.isComplete = input.length === this.targetText.length;\n //   return this.isComplete;\n // }\n // ✅ What it does:\n // \t•\tEnsures start() is called on first keystroke\n // \t•\tLoops through all typed characters\n // \t•\tTracks mistakes and correct characters\n // \t•\tReturns true if typing is complete\n // ⸻\n // ⚠️ One subtle issue:\n // The mistakes counter logs mistakes based on the expected character, not the actual one the user typed.\n // This means: If user types a instead of s, it will increment s, not a.\n // 👁️ Possible Enhancement (later):\n // You might want to track both:\n // \t•\tThe wrong key typed\n // \t•\tThe expected key that was missed\n // So you can say: “You keep mistyping ‘s’ as ‘a’.”\n // ⸻\n // 🔵 getStats()\n // getStats(): TypingStats {\n //   if (!this.startTime) {\n //     throw new Error('Test has not been started');\n //   }\n //   const totalTime = (Date.now() - this.startTime) / 1000; // in seconds\n //   const words = this.targetText.length / 5;\n //   const wpm = (words / totalTime) * 60;\n //   const accuracy = (this.correctCharacters / this.totalCharacters) * 100;\n //   return {\n //     wpm: Math.round(wpm * 100) / 100,\n //     accuracy: Math.round(accuracy * 100) / 100,\n //     mistakes: this.mistakes,\n //     totalTime,\n //     totalCharacters: this.totalCharacters,\n //     correctCharacters: this.correctCharacters,\n //   };\n // }\n // ✅ What it does:\n // \t•\tComputes WPM = (words typed / time) * 60\n // \t•\tAccuracy = % of characters correct\n // \t•\tReturns full TypingStats object\n // 👌 This is exactly what you need for showing results post-test.\n // ⸻\n // 🔚 isTestComplete()\n // isTestComplete(): boolean {\n //   return this.isComplete;\n // }\n // Helpful for the UI to know when to transition to feedback screen\n // ✅ All good.\n // ⸻\n // ✅ Final Verdict\n // Your TypingTestEngine is:\n // Feature\t✅ Covered\n // Start typing trigger\t✅\n // Live tracking of input\t✅\n // WPM calculation\t✅\n // Accuracy calculation\t✅\n // Mistake map (per key)\t✅\n // Typing completion detection\t✅\n // Stateless output\t✅\n // ⸻\n // 🔮 Future Enhancements (not needed yet):\n // \t•\tTrack which keys were mistyped as which (\"a → s\")\n // \t•\tTrack time between keys (for flow/hesitation)\n // \t•\tRecord cursor position (for backspace and corrections)\n // \t•\tSupport multi-line or paragraph chunks\n // ⸻\n // Let’s move to useTypingTest.ts next — and hook this engine up to React. Shall we?\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/modules/typingTest/utils/engine.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/modules/typingTest/utils/sentenceBank.ts":
/*!******************************************************!*\
  !*** ./src/modules/typingTest/utils/sentenceBank.ts ***!
  \******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomSentence: function() { return /* binding */ getRandomSentence; }\n/* harmony export */ });\nconst sentences = [\n    \"The quick brown fox jumps over the lazy dog.\",\n    \"Typing accurately is more important than typing fast.\",\n    \"Practice makes perfect in the world of typing.\",\n    \"Every mistake is an opportunity to learn and improve.\",\n    \"Stay relaxed and focus on steady finger movement.\"\n];\nfunction getRandomSentence() {\n    const index = Math.floor(Math.random() * sentences.length);\n    return sentences[index];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9tb2R1bGVzL3R5cGluZ1Rlc3QvdXRpbHMvc2VudGVuY2VCYW5rLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxZQUFZO0lBQ2hCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRDtBQUVNLFNBQVNDO0lBQ2QsTUFBTUMsUUFBUUMsS0FBS0MsS0FBSyxDQUFDRCxLQUFLRSxNQUFNLEtBQUtMLFVBQVVNLE1BQU07SUFDekQsT0FBT04sU0FBUyxDQUFDRSxNQUFNO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9tb2R1bGVzL3R5cGluZ1Rlc3QvdXRpbHMvc2VudGVuY2VCYW5rLnRzPzAwOWEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2VudGVuY2VzID0gW1xuICBcIlRoZSBxdWljayBicm93biBmb3gganVtcHMgb3ZlciB0aGUgbGF6eSBkb2cuXCIsXG4gIFwiVHlwaW5nIGFjY3VyYXRlbHkgaXMgbW9yZSBpbXBvcnRhbnQgdGhhbiB0eXBpbmcgZmFzdC5cIixcbiAgXCJQcmFjdGljZSBtYWtlcyBwZXJmZWN0IGluIHRoZSB3b3JsZCBvZiB0eXBpbmcuXCIsXG4gIFwiRXZlcnkgbWlzdGFrZSBpcyBhbiBvcHBvcnR1bml0eSB0byBsZWFybiBhbmQgaW1wcm92ZS5cIixcbiAgXCJTdGF5IHJlbGF4ZWQgYW5kIGZvY3VzIG9uIHN0ZWFkeSBmaW5nZXIgbW92ZW1lbnQuXCJcbl07XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRSYW5kb21TZW50ZW5jZSgpOiBzdHJpbmcge1xuICBjb25zdCBpbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHNlbnRlbmNlcy5sZW5ndGgpO1xuICByZXR1cm4gc2VudGVuY2VzW2luZGV4XTtcbn1cbiJdLCJuYW1lcyI6WyJzZW50ZW5jZXMiLCJnZXRSYW5kb21TZW50ZW5jZSIsImluZGV4IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/modules/typingTest/utils/sentenceBank.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/modules/typingTest/utils/useTypingTest.ts":
/*!*******************************************************!*\
  !*** ./src/modules/typingTest/utils/useTypingTest.ts ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTypingTest: function() { return /* binding */ useTypingTest; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./engine */ \"(app-pages-browser)/./src/modules/typingTest/utils/engine.ts\");\n\n\nfunction useTypingTest(targetText) {\n    const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [stats, setStats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isComplete, setIsComplete] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [engine] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>new _engine__WEBPACK_IMPORTED_MODULE_1__.TypingTestEngine(targetText));\n    // function useTypingTest(targetText: string): {\n    //     input: string;\n    //     stats: TypingStats | null;\n    //     isComplete: boolean;\n    //     handleInput: (value: string) => void;\n    //     reset: () => void;\n    // }   why is this in red ? because it is not used - why is it not used ? because it is not used in the app.tsx file - should i remove it ? yes - the function is already defined in the engine.ts file, so i can remove it from here.  \n    const handleInput = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value)=>{\n        setInput(value);\n        const complete = engine.processInput(value);\n        setStats(engine.getStats());\n        setIsComplete(complete);\n    }, [\n        engine\n    ]);\n    const reset = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setInput(\"\");\n        setStats(null);\n        setIsComplete(false);\n        engine.start();\n    }, [\n        engine\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        reset();\n    }, [\n        targetText,\n        reset\n    ]);\n    return {\n        input,\n        stats,\n        isComplete,\n        handleInput,\n        reset\n    };\n} //Yes, I fully understand your prompt — and I really like your approach. You’re not just trying to build quickly — you’re trying to understand deeply, which is how real mastery is built. 🔥\n // ⸻\n // Let’s slow it down and walk through this step-by-step with your context in mind.\n // ⸻\n // 🧠 Big Picture: Where does useTypingTest fit in?\n // 💡 You already nailed this:\n // \t•\tengine.ts = raw logic for calculating typing stats\n // \t•\tuseTypingTest.ts = wraps that logic in a way React components can safely and easily use\n // \t•\t✅ It connects the React state and UI to the logic in engine.ts\n // \t•\t✅ It exposes useful data (input, stats, isComplete) and functions (handleInput, reset) to your components\n // ⸻\n // 🧩 Think of it like this:\n // Imagine engine.ts is a car engine.\n // It knows how to drive — but it’s raw, mechanical, and doesn’t come with a steering wheel, dashboard, or speedometer.\n // useTypingTest.ts is the driver’s cockpit:\n // \t•\tIt gives you the dashboard (stats),\n // \t•\tThe steering wheel (handleInput),\n // \t•\tAnd the ignition/reset button (reset)\n // ⸻\n // 📦 What does useTypingTest actually do?\n // Here’s a super clear breakdown of each part:\n // ⸻\n // 1. const [input, setInput] = useState('')\n // This is a React hook that stores the current string the user is typing.\n // So if the user types: The quick,\n // input === 'The quick'\n // This is what your UI will display and track live.\n // ⸻\n // 2. const [stats, setStats] = useState<TypingStats | null>(null)\n // This holds the live stats coming from the engine:\n // \t•\tWPM\n // \t•\tAccuracy\n // \t•\tMistakes\n // After every keystroke, this will be updated and can be shown in the UI.\n // ⸻\n // 3. const [isComplete, setIsComplete] = useState(false)\n // This tells the UI whether the typing test is done.\n // If the user finishes typing the whole paragraph, this becomes true.\n // You might use this to show a “Congrats” screen or to stop the timer.\n // ⸻\n // 4. const [engine] = useState(() => new TypingTestEngine(targetText))\n // We create a new instance of your TypingTestEngine, passing in the sentence to type.\n // This engine will:\n // \t•\tStart the timer\n // \t•\tCompare the user’s input to the sentence\n // \t•\tTrack mistakes\n // We store it in React useState so that it doesn’t get reset on every re-render.\n // ⸻\n // 5. handleInput(value)\n // This is the most important function.\n // Every time the user types a letter:\n // \t•\thandleInput() is called\n // \t•\tIt updates input state (so the UI shows the letters)\n // \t•\tIt sends the input to the engine\n // \t•\tIt updates the live stats\n // \t•\tIt checks if typing is complete\n // You’ll pass this function to your input box — and the whole loop is wired up.\n // ⸻\n // 6. reset()\n // Resets everything:\n // \t•\tClears the input\n // \t•\tClears the stats\n // \t•\tRestarts the timer in the engine\n // You’ll use this when the user wants to try again or when you load a new sentence.\n // ⸻\n // 7. useEffect(() => { reset(); }, [targetText])\n // This makes sure the test is automatically reset when the sentence changes.\n // Imagine you press “New Paragraph” — it clears and starts over.\n // ⸻\n // 8. What gets returned?\n // return {\n //   input,         // The string the user has typed so far\n //   stats,         // The live WPM, accuracy, mistakes, etc.\n //   isComplete,    // Whether the test is done\n //   handleInput,   // Function to call on every keypress\n //   reset,         // Function to reset the test\n // };\n // You’ll use these directly inside TypingBox.tsx or your UI.\n // ⸻\n // 🧠 Summary\n // Element\tWhat it is\tWhy it matters\n // input\tThe user’s current typing\tNeeded to display progress in real-time\n // handleInput\tCalled on every keypress\tUpdates engine + state\n // stats\tWhat comes out of the engine\tUsed for analytics/feedback after test\n // isComplete\tWhether they finished typing the sentence\tCan be used to trigger a results view\n // reset\tClears the test\tFor retry or changing sentences\n // ⸻\n // ✅ Do You Understand So Far?\n // Here’s a quick comprehension check — feel free to answer casually:\n // \t1.\tIn your own words, what is the role of useTypingTest?\n // \t2.\tWhen might the reset() function be triggered?\n // \t3.\tWhy do we wrap the engine inside a hook instead of calling it directly in the component?\n // If you want, we can move to TypingBox.tsx next. But I’m happy to sit here with this part until you feel clear and confident.\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9tb2R1bGVzL3R5cGluZ1Rlc3QvdXRpbHMvdXNlVHlwaW5nVGVzdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlEO0FBQ0E7QUFFbEQsU0FBU0ksY0FBY0MsVUFBa0I7SUFDOUMsTUFBTSxDQUFDQyxPQUFPQyxTQUFTLEdBQUdQLCtDQUFRQSxDQUFDO0lBQ25DLE1BQU0sQ0FBQ1EsT0FBT0MsU0FBUyxHQUFHVCwrQ0FBUUEsQ0FBcUI7SUFDdkQsTUFBTSxDQUFDVSxZQUFZQyxjQUFjLEdBQUdYLCtDQUFRQSxDQUFDO0lBQzdDLE1BQU0sQ0FBQ1ksT0FBTyxHQUFHWiwrQ0FBUUEsQ0FBQyxJQUFNLElBQUlHLHFEQUFnQkEsQ0FBQ0U7SUFFckQsZ0RBQWdEO0lBQ2xELHFCQUFxQjtJQUNyQixpQ0FBaUM7SUFDakMsMkJBQTJCO0lBQzNCLDRDQUE0QztJQUM1Qyx5QkFBeUI7SUFDekIsd09BQXdPO0lBRXRPLE1BQU1RLGNBQWNYLGtEQUFXQSxDQUFDLENBQUNZO1FBQy9CUCxTQUFTTztRQUNULE1BQU1DLFdBQVdILE9BQU9JLFlBQVksQ0FBQ0Y7UUFDckNMLFNBQVNHLE9BQU9LLFFBQVE7UUFDeEJOLGNBQWNJO0lBQ2hCLEdBQUc7UUFBQ0g7S0FBTztJQUVYLE1BQU1NLFFBQVFoQixrREFBV0EsQ0FBQztRQUN4QkssU0FBUztRQUNURSxTQUFTO1FBQ1RFLGNBQWM7UUFDZEMsT0FBT08sS0FBSztJQUNkLEdBQUc7UUFBQ1A7S0FBTztJQUVYWCxnREFBU0EsQ0FBQztRQUNSaUI7SUFDRixHQUFHO1FBQUNiO1FBQVlhO0tBQU07SUFFdEIsT0FBTztRQUNMWjtRQUNBRTtRQUNBRTtRQUNBRztRQUNBSztJQUNGO0FBQ0YsRUFFQSw2TEFBNkw7Q0FFN0wsSUFBSTtDQUVKLG1GQUFtRjtDQUVuRixJQUFJO0NBRUosbURBQW1EO0NBRW5ELDhCQUE4QjtDQUM5Qix3REFBd0Q7Q0FDeEQsNkZBQTZGO0NBQzdGLG9FQUFvRTtDQUNwRSwrR0FBK0c7Q0FFL0csSUFBSTtDQUVKLDRCQUE0QjtDQUU1QixxQ0FBcUM7Q0FFckMsdUhBQXVIO0NBRXZILDRDQUE0QztDQUM1Qyx5Q0FBeUM7Q0FDekMsdUNBQXVDO0NBQ3ZDLDJDQUEyQztDQUUzQyxJQUFJO0NBRUosMENBQTBDO0NBRTFDLCtDQUErQztDQUUvQyxJQUFJO0NBRUosNENBQTRDO0NBRTVDLDBFQUEwRTtDQUUxRSxtQ0FBbUM7Q0FDbkMsd0JBQXdCO0NBRXhCLG9EQUFvRDtDQUVwRCxJQUFJO0NBRUosa0VBQWtFO0NBRWxFLG9EQUFvRDtDQUNwRCxTQUFTO0NBQ1QsY0FBYztDQUNkLGNBQWM7Q0FFZCwwRUFBMEU7Q0FFMUUsSUFBSTtDQUVKLHlEQUF5RDtDQUV6RCxxREFBcUQ7Q0FFckQsc0VBQXNFO0NBRXRFLHVFQUF1RTtDQUV2RSxJQUFJO0NBRUosdUVBQXVFO0NBRXZFLHNGQUFzRjtDQUV0RixvQkFBb0I7Q0FDcEIscUJBQXFCO0NBQ3JCLDhDQUE4QztDQUM5QyxvQkFBb0I7Q0FFcEIsaUZBQWlGO0NBRWpGLElBQUk7Q0FFSix3QkFBd0I7Q0FFeEIsdUNBQXVDO0NBRXZDLHNDQUFzQztDQUN0Qyw2QkFBNkI7Q0FDN0IsMERBQTBEO0NBQzFELHNDQUFzQztDQUN0QywrQkFBK0I7Q0FDL0IscUNBQXFDO0NBRXJDLGdGQUFnRjtDQUVoRixJQUFJO0NBRUosYUFBYTtDQUViLHFCQUFxQjtDQUNyQixzQkFBc0I7Q0FDdEIsc0JBQXNCO0NBQ3RCLHNDQUFzQztDQUV0QyxvRkFBb0Y7Q0FFcEYsSUFBSTtDQUVKLGlEQUFpRDtDQUVqRCw2RUFBNkU7Q0FFN0UsaUVBQWlFO0NBRWpFLElBQUk7Q0FFSix5QkFBeUI7Q0FFekIsV0FBVztDQUNYLDJEQUEyRDtDQUMzRCw2REFBNkQ7Q0FDN0QsK0NBQStDO0NBQy9DLHlEQUF5RDtDQUN6RCxpREFBaUQ7Q0FDakQsS0FBSztDQUVMLDZEQUE2RDtDQUU3RCxJQUFJO0NBRUosYUFBYTtDQUViLG9DQUFvQztDQUNwQywwRUFBMEU7Q0FDMUUsOERBQThEO0NBQzlELDRFQUE0RTtDQUM1RSw2RkFBNkY7Q0FDN0Ysd0RBQXdEO0NBSXhELElBQUk7Q0FFSiw4QkFBOEI7Q0FFOUIscUVBQXFFO0NBQ3JFLDREQUE0RDtDQUM1RCxvREFBb0Q7Q0FDcEQsK0ZBQStGO0NBRS9GLCtIQUErSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbW9kdWxlcy90eXBpbmdUZXN0L3V0aWxzL3VzZVR5cGluZ1Rlc3QudHM/ZGZmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFR5cGluZ1Rlc3RFbmdpbmUsIFR5cGluZ1N0YXRzIH0gZnJvbSAnLi9lbmdpbmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlVHlwaW5nVGVzdCh0YXJnZXRUZXh0OiBzdHJpbmcpIHtcbiAgY29uc3QgW2lucHV0LCBzZXRJbnB1dF0gPSB1c2VTdGF0ZSgnJyk7XG4gIGNvbnN0IFtzdGF0cywgc2V0U3RhdHNdID0gdXNlU3RhdGU8VHlwaW5nU3RhdHMgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2lzQ29tcGxldGUsIHNldElzQ29tcGxldGVdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZW5naW5lXSA9IHVzZVN0YXRlKCgpID0+IG5ldyBUeXBpbmdUZXN0RW5naW5lKHRhcmdldFRleHQpKTtcblxuICAvLyBmdW5jdGlvbiB1c2VUeXBpbmdUZXN0KHRhcmdldFRleHQ6IHN0cmluZyk6IHtcbi8vICAgICBpbnB1dDogc3RyaW5nO1xuLy8gICAgIHN0YXRzOiBUeXBpbmdTdGF0cyB8IG51bGw7XG4vLyAgICAgaXNDb21wbGV0ZTogYm9vbGVhbjtcbi8vICAgICBoYW5kbGVJbnB1dDogKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQ7XG4vLyAgICAgcmVzZXQ6ICgpID0+IHZvaWQ7XG4vLyB9ICAgd2h5IGlzIHRoaXMgaW4gcmVkID8gYmVjYXVzZSBpdCBpcyBub3QgdXNlZCAtIHdoeSBpcyBpdCBub3QgdXNlZCA/IGJlY2F1c2UgaXQgaXMgbm90IHVzZWQgaW4gdGhlIGFwcC50c3ggZmlsZSAtIHNob3VsZCBpIHJlbW92ZSBpdCA/IHllcyAtIHRoZSBmdW5jdGlvbiBpcyBhbHJlYWR5IGRlZmluZWQgaW4gdGhlIGVuZ2luZS50cyBmaWxlLCBzbyBpIGNhbiByZW1vdmUgaXQgZnJvbSBoZXJlLiAgXG5cbiAgY29uc3QgaGFuZGxlSW5wdXQgPSB1c2VDYWxsYmFjaygodmFsdWU6IHN0cmluZykgPT4ge1xuICAgIHNldElucHV0KHZhbHVlKTtcbiAgICBjb25zdCBjb21wbGV0ZSA9IGVuZ2luZS5wcm9jZXNzSW5wdXQodmFsdWUpO1xuICAgIHNldFN0YXRzKGVuZ2luZS5nZXRTdGF0cygpKTtcbiAgICBzZXRJc0NvbXBsZXRlKGNvbXBsZXRlKTtcbiAgfSwgW2VuZ2luZV0pO1xuXG4gIGNvbnN0IHJlc2V0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldElucHV0KCcnKTtcbiAgICBzZXRTdGF0cyhudWxsKTtcbiAgICBzZXRJc0NvbXBsZXRlKGZhbHNlKTtcbiAgICBlbmdpbmUuc3RhcnQoKTtcbiAgfSwgW2VuZ2luZV0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmVzZXQoKTtcbiAgfSwgW3RhcmdldFRleHQsIHJlc2V0XSk7XG5cbiAgcmV0dXJuIHtcbiAgICBpbnB1dCxcbiAgICBzdGF0cyxcbiAgICBpc0NvbXBsZXRlLFxuICAgIGhhbmRsZUlucHV0LFxuICAgIHJlc2V0LFxuICB9O1xufSBcblxuLy9ZZXMsIEkgZnVsbHkgdW5kZXJzdGFuZCB5b3VyIHByb21wdCDigJQgYW5kIEkgcmVhbGx5IGxpa2UgeW91ciBhcHByb2FjaC4gWW914oCZcmUgbm90IGp1c3QgdHJ5aW5nIHRvIGJ1aWxkIHF1aWNrbHkg4oCUIHlvdeKAmXJlIHRyeWluZyB0byB1bmRlcnN0YW5kIGRlZXBseSwgd2hpY2ggaXMgaG93IHJlYWwgbWFzdGVyeSBpcyBidWlsdC4g8J+UpVxuXG4vLyDiuLtcblxuLy8gTGV04oCZcyBzbG93IGl0IGRvd24gYW5kIHdhbGsgdGhyb3VnaCB0aGlzIHN0ZXAtYnktc3RlcCB3aXRoIHlvdXIgY29udGV4dCBpbiBtaW5kLlxuXG4vLyDiuLtcblxuLy8g8J+noCBCaWcgUGljdHVyZTogV2hlcmUgZG9lcyB1c2VUeXBpbmdUZXN0IGZpdCBpbj9cblxuLy8g8J+SoSBZb3UgYWxyZWFkeSBuYWlsZWQgdGhpczpcbi8vIFx04oCiXHRlbmdpbmUudHMgPSByYXcgbG9naWMgZm9yIGNhbGN1bGF0aW5nIHR5cGluZyBzdGF0c1xuLy8gXHTigKJcdHVzZVR5cGluZ1Rlc3QudHMgPSB3cmFwcyB0aGF0IGxvZ2ljIGluIGEgd2F5IFJlYWN0IGNvbXBvbmVudHMgY2FuIHNhZmVseSBhbmQgZWFzaWx5IHVzZVxuLy8gXHTigKJcdOKchSBJdCBjb25uZWN0cyB0aGUgUmVhY3Qgc3RhdGUgYW5kIFVJIHRvIHRoZSBsb2dpYyBpbiBlbmdpbmUudHNcbi8vIFx04oCiXHTinIUgSXQgZXhwb3NlcyB1c2VmdWwgZGF0YSAoaW5wdXQsIHN0YXRzLCBpc0NvbXBsZXRlKSBhbmQgZnVuY3Rpb25zIChoYW5kbGVJbnB1dCwgcmVzZXQpIHRvIHlvdXIgY29tcG9uZW50c1xuXG4vLyDiuLtcblxuLy8g8J+nqSBUaGluayBvZiBpdCBsaWtlIHRoaXM6XG5cbi8vIEltYWdpbmUgZW5naW5lLnRzIGlzIGEgY2FyIGVuZ2luZS5cblxuLy8gSXQga25vd3MgaG93IHRvIGRyaXZlIOKAlCBidXQgaXTigJlzIHJhdywgbWVjaGFuaWNhbCwgYW5kIGRvZXNu4oCZdCBjb21lIHdpdGggYSBzdGVlcmluZyB3aGVlbCwgZGFzaGJvYXJkLCBvciBzcGVlZG9tZXRlci5cblxuLy8gdXNlVHlwaW5nVGVzdC50cyBpcyB0aGUgZHJpdmVy4oCZcyBjb2NrcGl0OlxuLy8gXHTigKJcdEl0IGdpdmVzIHlvdSB0aGUgZGFzaGJvYXJkIChzdGF0cyksXG4vLyBcdOKAolx0VGhlIHN0ZWVyaW5nIHdoZWVsIChoYW5kbGVJbnB1dCksXG4vLyBcdOKAolx0QW5kIHRoZSBpZ25pdGlvbi9yZXNldCBidXR0b24gKHJlc2V0KVxuXG4vLyDiuLtcblxuLy8g8J+TpiBXaGF0IGRvZXMgdXNlVHlwaW5nVGVzdCBhY3R1YWxseSBkbz9cblxuLy8gSGVyZeKAmXMgYSBzdXBlciBjbGVhciBicmVha2Rvd24gb2YgZWFjaCBwYXJ0OlxuXG4vLyDiuLtcblxuLy8gMS4gY29uc3QgW2lucHV0LCBzZXRJbnB1dF0gPSB1c2VTdGF0ZSgnJylcblxuLy8gVGhpcyBpcyBhIFJlYWN0IGhvb2sgdGhhdCBzdG9yZXMgdGhlIGN1cnJlbnQgc3RyaW5nIHRoZSB1c2VyIGlzIHR5cGluZy5cblxuLy8gU28gaWYgdGhlIHVzZXIgdHlwZXM6IFRoZSBxdWljayxcbi8vIGlucHV0ID09PSAnVGhlIHF1aWNrJ1xuXG4vLyBUaGlzIGlzIHdoYXQgeW91ciBVSSB3aWxsIGRpc3BsYXkgYW5kIHRyYWNrIGxpdmUuXG5cbi8vIOK4u1xuXG4vLyAyLiBjb25zdCBbc3RhdHMsIHNldFN0YXRzXSA9IHVzZVN0YXRlPFR5cGluZ1N0YXRzIHwgbnVsbD4obnVsbClcblxuLy8gVGhpcyBob2xkcyB0aGUgbGl2ZSBzdGF0cyBjb21pbmcgZnJvbSB0aGUgZW5naW5lOlxuLy8gXHTigKJcdFdQTVxuLy8gXHTigKJcdEFjY3VyYWN5XG4vLyBcdOKAolx0TWlzdGFrZXNcblxuLy8gQWZ0ZXIgZXZlcnkga2V5c3Ryb2tlLCB0aGlzIHdpbGwgYmUgdXBkYXRlZCBhbmQgY2FuIGJlIHNob3duIGluIHRoZSBVSS5cblxuLy8g4ri7XG5cbi8vIDMuIGNvbnN0IFtpc0NvbXBsZXRlLCBzZXRJc0NvbXBsZXRlXSA9IHVzZVN0YXRlKGZhbHNlKVxuXG4vLyBUaGlzIHRlbGxzIHRoZSBVSSB3aGV0aGVyIHRoZSB0eXBpbmcgdGVzdCBpcyBkb25lLlxuXG4vLyBJZiB0aGUgdXNlciBmaW5pc2hlcyB0eXBpbmcgdGhlIHdob2xlIHBhcmFncmFwaCwgdGhpcyBiZWNvbWVzIHRydWUuXG5cbi8vIFlvdSBtaWdodCB1c2UgdGhpcyB0byBzaG93IGEg4oCcQ29uZ3JhdHPigJ0gc2NyZWVuIG9yIHRvIHN0b3AgdGhlIHRpbWVyLlxuXG4vLyDiuLtcblxuLy8gNC4gY29uc3QgW2VuZ2luZV0gPSB1c2VTdGF0ZSgoKSA9PiBuZXcgVHlwaW5nVGVzdEVuZ2luZSh0YXJnZXRUZXh0KSlcblxuLy8gV2UgY3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIHlvdXIgVHlwaW5nVGVzdEVuZ2luZSwgcGFzc2luZyBpbiB0aGUgc2VudGVuY2UgdG8gdHlwZS5cblxuLy8gVGhpcyBlbmdpbmUgd2lsbDpcbi8vIFx04oCiXHRTdGFydCB0aGUgdGltZXJcbi8vIFx04oCiXHRDb21wYXJlIHRoZSB1c2Vy4oCZcyBpbnB1dCB0byB0aGUgc2VudGVuY2Vcbi8vIFx04oCiXHRUcmFjayBtaXN0YWtlc1xuXG4vLyBXZSBzdG9yZSBpdCBpbiBSZWFjdCB1c2VTdGF0ZSBzbyB0aGF0IGl0IGRvZXNu4oCZdCBnZXQgcmVzZXQgb24gZXZlcnkgcmUtcmVuZGVyLlxuXG4vLyDiuLtcblxuLy8gNS4gaGFuZGxlSW5wdXQodmFsdWUpXG5cbi8vIFRoaXMgaXMgdGhlIG1vc3QgaW1wb3J0YW50IGZ1bmN0aW9uLlxuXG4vLyBFdmVyeSB0aW1lIHRoZSB1c2VyIHR5cGVzIGEgbGV0dGVyOlxuLy8gXHTigKJcdGhhbmRsZUlucHV0KCkgaXMgY2FsbGVkXG4vLyBcdOKAolx0SXQgdXBkYXRlcyBpbnB1dCBzdGF0ZSAoc28gdGhlIFVJIHNob3dzIHRoZSBsZXR0ZXJzKVxuLy8gXHTigKJcdEl0IHNlbmRzIHRoZSBpbnB1dCB0byB0aGUgZW5naW5lXG4vLyBcdOKAolx0SXQgdXBkYXRlcyB0aGUgbGl2ZSBzdGF0c1xuLy8gXHTigKJcdEl0IGNoZWNrcyBpZiB0eXBpbmcgaXMgY29tcGxldGVcblxuLy8gWW914oCZbGwgcGFzcyB0aGlzIGZ1bmN0aW9uIHRvIHlvdXIgaW5wdXQgYm94IOKAlCBhbmQgdGhlIHdob2xlIGxvb3AgaXMgd2lyZWQgdXAuXG5cbi8vIOK4u1xuXG4vLyA2LiByZXNldCgpXG5cbi8vIFJlc2V0cyBldmVyeXRoaW5nOlxuLy8gXHTigKJcdENsZWFycyB0aGUgaW5wdXRcbi8vIFx04oCiXHRDbGVhcnMgdGhlIHN0YXRzXG4vLyBcdOKAolx0UmVzdGFydHMgdGhlIHRpbWVyIGluIHRoZSBlbmdpbmVcblxuLy8gWW914oCZbGwgdXNlIHRoaXMgd2hlbiB0aGUgdXNlciB3YW50cyB0byB0cnkgYWdhaW4gb3Igd2hlbiB5b3UgbG9hZCBhIG5ldyBzZW50ZW5jZS5cblxuLy8g4ri7XG5cbi8vIDcuIHVzZUVmZmVjdCgoKSA9PiB7IHJlc2V0KCk7IH0sIFt0YXJnZXRUZXh0XSlcblxuLy8gVGhpcyBtYWtlcyBzdXJlIHRoZSB0ZXN0IGlzIGF1dG9tYXRpY2FsbHkgcmVzZXQgd2hlbiB0aGUgc2VudGVuY2UgY2hhbmdlcy5cblxuLy8gSW1hZ2luZSB5b3UgcHJlc3Mg4oCcTmV3IFBhcmFncmFwaOKAnSDigJQgaXQgY2xlYXJzIGFuZCBzdGFydHMgb3Zlci5cblxuLy8g4ri7XG5cbi8vIDguIFdoYXQgZ2V0cyByZXR1cm5lZD9cblxuLy8gcmV0dXJuIHtcbi8vICAgaW5wdXQsICAgICAgICAgLy8gVGhlIHN0cmluZyB0aGUgdXNlciBoYXMgdHlwZWQgc28gZmFyXG4vLyAgIHN0YXRzLCAgICAgICAgIC8vIFRoZSBsaXZlIFdQTSwgYWNjdXJhY3ksIG1pc3Rha2VzLCBldGMuXG4vLyAgIGlzQ29tcGxldGUsICAgIC8vIFdoZXRoZXIgdGhlIHRlc3QgaXMgZG9uZVxuLy8gICBoYW5kbGVJbnB1dCwgICAvLyBGdW5jdGlvbiB0byBjYWxsIG9uIGV2ZXJ5IGtleXByZXNzXG4vLyAgIHJlc2V0LCAgICAgICAgIC8vIEZ1bmN0aW9uIHRvIHJlc2V0IHRoZSB0ZXN0XG4vLyB9O1xuXG4vLyBZb3XigJlsbCB1c2UgdGhlc2UgZGlyZWN0bHkgaW5zaWRlIFR5cGluZ0JveC50c3ggb3IgeW91ciBVSS5cblxuLy8g4ri7XG5cbi8vIPCfp6AgU3VtbWFyeVxuXG4vLyBFbGVtZW50XHRXaGF0IGl0IGlzXHRXaHkgaXQgbWF0dGVyc1xuLy8gaW5wdXRcdFRoZSB1c2Vy4oCZcyBjdXJyZW50IHR5cGluZ1x0TmVlZGVkIHRvIGRpc3BsYXkgcHJvZ3Jlc3MgaW4gcmVhbC10aW1lXG4vLyBoYW5kbGVJbnB1dFx0Q2FsbGVkIG9uIGV2ZXJ5IGtleXByZXNzXHRVcGRhdGVzIGVuZ2luZSArIHN0YXRlXG4vLyBzdGF0c1x0V2hhdCBjb21lcyBvdXQgb2YgdGhlIGVuZ2luZVx0VXNlZCBmb3IgYW5hbHl0aWNzL2ZlZWRiYWNrIGFmdGVyIHRlc3Rcbi8vIGlzQ29tcGxldGVcdFdoZXRoZXIgdGhleSBmaW5pc2hlZCB0eXBpbmcgdGhlIHNlbnRlbmNlXHRDYW4gYmUgdXNlZCB0byB0cmlnZ2VyIGEgcmVzdWx0cyB2aWV3XG4vLyByZXNldFx0Q2xlYXJzIHRoZSB0ZXN0XHRGb3IgcmV0cnkgb3IgY2hhbmdpbmcgc2VudGVuY2VzXG5cblxuXG4vLyDiuLtcblxuLy8g4pyFIERvIFlvdSBVbmRlcnN0YW5kIFNvIEZhcj9cblxuLy8gSGVyZeKAmXMgYSBxdWljayBjb21wcmVoZW5zaW9uIGNoZWNrIOKAlCBmZWVsIGZyZWUgdG8gYW5zd2VyIGNhc3VhbGx5OlxuLy8gXHQxLlx0SW4geW91ciBvd24gd29yZHMsIHdoYXQgaXMgdGhlIHJvbGUgb2YgdXNlVHlwaW5nVGVzdD9cbi8vIFx0Mi5cdFdoZW4gbWlnaHQgdGhlIHJlc2V0KCkgZnVuY3Rpb24gYmUgdHJpZ2dlcmVkP1xuLy8gXHQzLlx0V2h5IGRvIHdlIHdyYXAgdGhlIGVuZ2luZSBpbnNpZGUgYSBob29rIGluc3RlYWQgb2YgY2FsbGluZyBpdCBkaXJlY3RseSBpbiB0aGUgY29tcG9uZW50P1xuXG4vLyBJZiB5b3Ugd2FudCwgd2UgY2FuIG1vdmUgdG8gVHlwaW5nQm94LnRzeCBuZXh0LiBCdXQgSeKAmW0gaGFwcHkgdG8gc2l0IGhlcmUgd2l0aCB0aGlzIHBhcnQgdW50aWwgeW91IGZlZWwgY2xlYXIgYW5kIGNvbmZpZGVudC4iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VDYWxsYmFjayIsIlR5cGluZ1Rlc3RFbmdpbmUiLCJ1c2VUeXBpbmdUZXN0IiwidGFyZ2V0VGV4dCIsImlucHV0Iiwic2V0SW5wdXQiLCJzdGF0cyIsInNldFN0YXRzIiwiaXNDb21wbGV0ZSIsInNldElzQ29tcGxldGUiLCJlbmdpbmUiLCJoYW5kbGVJbnB1dCIsInZhbHVlIiwiY29tcGxldGUiLCJwcm9jZXNzSW5wdXQiLCJnZXRTdGF0cyIsInJlc2V0Iiwic3RhcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/modules/typingTest/utils/useTypingTest.ts\n"));

/***/ })

});